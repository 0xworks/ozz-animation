name: build_and_test

on: [push, pull_request]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        build_type: [Release, Debug]
        option: [ref, shared]

    steps:
    - uses: actions/checkout@v2
    - name: install mesa dependency
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory.
      run: |
        cmake --version
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DBUILD_SHARED_LIBS=${{ matrix.option == 'shared' }} -Dozz_build_simd_ref=${{ matrix.option == 'ref' }}
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --use-stderr

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: ctest -C ${{matrix.build_type}} --output-on-failure
      
